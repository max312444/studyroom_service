# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: role/service.proto for package 'Bannote.Userservice.Role.V1'

require 'grpc'
require 'role/service_pb'

module Bannote
  module Userservice
    module Role
      module V1
        module RoleService
          # Gateway에서 gRPC metadata로 전달되는 정보:
          # - user-id: 요청하는 유저의 ID
          # - user-role: 요청하는 유저의 역할 (ADMIN, STUDENT, EMPLOYEE 등)
          #
          # The role service definition.
          class Service

            include ::GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'bannote.userservice.role.v1.RoleService'

            #  유저에게 권한 부여 API
            rpc :AssignRoleToUser, ::Bannote::Userservice::Role::V1::AssignRoleToUserRequest, ::Bannote::Userservice::Role::V1::AssignRoleToUserResponse
            #  유저에게서 권한 제거 API
            rpc :RemoveRoleFromUser, ::Bannote::Userservice::Role::V1::RemoveRoleFromUserRequest, ::Bannote::Userservice::Role::V1::RemoveRoleFromUserResponse
            #  유저의 권한 목록 조회 API
            rpc :ListUserRoles, ::Bannote::Userservice::Role::V1::ListUserRolesRequest, ::Bannote::Userservice::Role::V1::ListUserRolesResponse
            #  유저가 특정 권한 레벨을 충족하는지 확인 API (내부용)
            rpc :CheckUserHasAuthority, ::Bannote::Userservice::Role::V1::CheckUserHasAuthorityRequest, ::Bannote::Userservice::Role::V1::CheckUserHasAuthorityResponse
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
