# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: group/group_service.proto

require 'google/protobuf'

require 'group/group_pb'


descriptor_data = "\n\x19group/group_service.proto\x12 bannote.scheduleservice.group.v1\x1a\x11group/group.proto\"\xdb\x02\n\x12\x43reateGroupRequest\x12\"\n\rgroup_type_id\x18\x01 \x01(\x03R\x0bgroupTypeId\x12\x1d\n\ngroup_name\x18\x02 \x01(\tR\tgroupName\x12+\n\x11group_description\x18\x03 \x01(\tR\x10groupDescription\x12\x1b\n\tis_public\x18\x04 \x01(\x08R\x08isPublic\x12!\n\x0cis_published\x18\x05 \x01(\x08R\x0bisPublished\x12#\n\rcolor_default\x18\x06 \x01(\tR\x0c\x63olorDefault\x12\'\n\x0f\x63olor_highlight\x18\x07 \x01(\tR\x0e\x63olorHighlight\x12\x17\n\x07tag_ids\x18\x08 \x03(\x03R\x06tagIds\x12.\n\x13group_permission_id\x18\t \x01(\x03R\x11groupPermissionId\"\xd2\x01\n\x13GetGroupListRequest\x12\'\n\rgroup_type_id\x18\x01 \x01(\x03H\x00R\x0bgroupTypeId\x88\x01\x01\x12 \n\tis_public\x18\x02 \x01(\x08H\x01R\x08isPublic\x88\x01\x01\x12&\n\x0cis_published\x18\x03 \x01(\x08H\x02R\x0bisPublished\x88\x01\x01\x12\x17\n\x07tag_ids\x18\x04 \x03(\x03R\x06tagIdsB\x10\n\x0e_group_type_idB\x0c\n\n_is_publicB\x0f\n\r_is_published\",\n\x0fGetGroupRequest\x12\x19\n\x08group_id\x18\x01 \x01(\x03R\x07groupId\"\xaa\x03\n\x12UpdateGroupRequest\x12\x19\n\x08group_id\x18\x01 \x01(\x03R\x07groupId\x12\"\n\ngroup_name\x18\x02 \x01(\tH\x00R\tgroupName\x88\x01\x01\x12\x30\n\x11group_description\x18\x03 \x01(\tH\x01R\x10groupDescription\x88\x01\x01\x12 \n\tis_public\x18\x04 \x01(\x08H\x02R\x08isPublic\x88\x01\x01\x12&\n\x0cis_published\x18\x05 \x01(\x08H\x03R\x0bisPublished\x88\x01\x01\x12(\n\rcolor_default\x18\x06 \x01(\tH\x04R\x0c\x63olorDefault\x88\x01\x01\x12,\n\x0f\x63olor_highlight\x18\x07 \x01(\tH\x05R\x0e\x63olorHighlight\x88\x01\x01\x12\x17\n\x07tag_ids\x18\x08 \x03(\x03R\x06tagIdsB\r\n\x0b_group_nameB\x14\n\x12_group_descriptionB\x0c\n\n_is_publicB\x0f\n\r_is_publishedB\x10\n\x0e_color_defaultB\x12\n\x10_color_highlight\"/\n\x12\x44\x65leteGroupRequest\x12\x19\n\x08group_id\x18\x01 \x01(\x03R\x07groupId\"/\n\x13\x44\x65leteGroupResponse\x12\x18\n\x07success\x18\x01 \x01(\x08R\x07success\"T\n\x13\x43reateGroupResponse\x12=\n\x05group\x18\x01 \x01(\x0b\x32\'.bannote.scheduleservice.group.v1.GroupR\x05group\"Q\n\x10GetGroupResponse\x12=\n\x05group\x18\x01 \x01(\x0b\x32\'.bannote.scheduleservice.group.v1.GroupR\x05group\"T\n\x13UpdateGroupResponse\x12=\n\x05group\x18\x01 \x01(\x0b\x32\'.bannote.scheduleservice.group.v1.GroupR\x05group\"{\n\x14GetGroupListResponse\x12\x63\n\x13group_list_response\x18\x01 \x01(\x0b\x32\x33.bannote.scheduleservice.group.v1.GroupListResponseR\x11groupListResponse2\xf4\x04\n\x0cGroupService\x12z\n\x0b\x43reateGroup\x12\x34.bannote.scheduleservice.group.v1.CreateGroupRequest\x1a\x35.bannote.scheduleservice.group.v1.CreateGroupResponse\x12}\n\x0cGetGroupList\x12\x35.bannote.scheduleservice.group.v1.GetGroupListRequest\x1a\x36.bannote.scheduleservice.group.v1.GetGroupListResponse\x12q\n\x08GetGroup\x12\x31.bannote.scheduleservice.group.v1.GetGroupRequest\x1a\x32.bannote.scheduleservice.group.v1.GetGroupResponse\x12z\n\x0bUpdateGroup\x12\x34.bannote.scheduleservice.group.v1.UpdateGroupRequest\x1a\x35.bannote.scheduleservice.group.v1.UpdateGroupResponse\x12z\n\x0b\x44\x65leteGroup\x12\x34.bannote.scheduleservice.group.v1.DeleteGroupRequest\x1a\x35.bannote.scheduleservice.group.v1.DeleteGroupResponseB\xdc\x01\n$com.bannote.scheduleservice.group.v1B\x11GroupServiceProtoP\x01\xa2\x02\x03\x42SG\xaa\x02 Bannote.Scheduleservice.Group.V1\xca\x02 Bannote\\Scheduleservice\\Group\\V1\xe2\x02,Bannote\\Scheduleservice\\Group\\V1\\GPBMetadata\xea\x02#Bannote::Scheduleservice::Group::V1b\x06proto3"

pool = ::Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Bannote
  module Scheduleservice
    module Group
      module V1
        CreateGroupRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("bannote.scheduleservice.group.v1.CreateGroupRequest").msgclass
        GetGroupListRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("bannote.scheduleservice.group.v1.GetGroupListRequest").msgclass
        GetGroupRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("bannote.scheduleservice.group.v1.GetGroupRequest").msgclass
        UpdateGroupRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("bannote.scheduleservice.group.v1.UpdateGroupRequest").msgclass
        DeleteGroupRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("bannote.scheduleservice.group.v1.DeleteGroupRequest").msgclass
        DeleteGroupResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("bannote.scheduleservice.group.v1.DeleteGroupResponse").msgclass
        CreateGroupResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("bannote.scheduleservice.group.v1.CreateGroupResponse").msgclass
        GetGroupResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("bannote.scheduleservice.group.v1.GetGroupResponse").msgclass
        UpdateGroupResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("bannote.scheduleservice.group.v1.UpdateGroupResponse").msgclass
        GetGroupListResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("bannote.scheduleservice.group.v1.GetGroupListResponse").msgclass
      end
    end
  end
end
