syntax = "proto3";

package bannote.userservice.allowedemail.v1;

import "allowedemail/allowedemail.proto";

option go_package = "github.com/kyumin1227/bannote-proto/gen/go/user-service/allowed_email/v1";
option java_multiple_files = true;
option java_package = "com.bannote.userservice.proto.allowed_email.v1";

// Gateway에서 gRPC metadata로 전달되는 정보:
// - user-id: 요청하는 유저의 ID
// - user-role: 요청하는 유저의 역할 (ADMIN, STUDENT, EMPLOYEE 등)

// The email allowlist service definition.
service AllowedEmailService {
//  이메일 허용 목록 추가 API
  rpc AddAllowedEmail (AddAllowedEmailRequest) returns (AddAllowedEmailResponse) {
  }

//  이메일 허용 목록 삭제 API
  rpc RemoveAllowedEmail (RemoveAllowedEmailRequest) returns (RemoveAllowedEmailResponse) {
  }

//  이메일 허용 목록 전체 조회 API
  rpc ListAllowedEmail (ListAllowedEmailRequest) returns (ListAllowedEmailResponse) {
  }
}

// 이메일 허용 목록 추가 시 필요한 정보
message AddAllowedEmailRequest {
  string email = 1;
}

message AddAllowedEmailResponse {
  AllowedEmail allowed_email = 1;
}

// 이메일 허용 목록 삭제 시 필요한 정보
message RemoveAllowedEmailRequest {
  string email = 1;
}

message RemoveAllowedEmailResponse {
  AllowedEmail allowed_email = 1;
}

// 이메일 허용 목록 전체 조회 시 필요한 정보
message ListAllowedEmailRequest {
  int32 page = 1;
  int32 size = 2;
}

// 이메일 허용 목록 전체 조회 응답
message ListAllowedEmailResponse {
  repeated AllowedEmail allowed_email = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 size = 4;
}
