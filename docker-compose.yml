version: "3.9"

services:
  app:
    build: .
    container_name: studyroom_app
    command: tail -f /dev/null
    # gRPC 서버를 직접 실행하도록 명령을 변경합니다.
    # gRPC 서버가 50051 포트에서 수신 대기합니다.
    volumes:
      - .:/studyroom_service
      # tmp 디렉토리 볼륨 마운트:
      # Windows 환경에서 권한 문제 발생 시, 호스트의 tmp 디렉토리 대신
      # Docker가 관리하는 익명 볼륨을 사용하여 컨테이너 내부의 tmp 디렉토리에 마운트합니다.
      # 이렇게 하면 컨테이너 내부에서 파일 쓰기 권한 문제가 해결됩니다.
      - /studyroom_service/tmp
    working_dir: /studyroom_service
    ports:
      - "3000:3000"
      - "50051:50051" # gRPC 서버 포트를 외부에 노출합니다.
    depends_on:
      - db
      - redis
      - kafka
    environment:
      RAILS_ENV: development
      DB_HOST: db
      DB_USERNAME: root
      DB_PASSWORD: 1234
      RAILS_MASTER_KEY: de840449ba36702434883c58f5574809
      BUNDLE_DEPLOYMENT: 0 # 개발 환경에서 Gemfile.lock 업데이트를 허용합니다.
    # RAILS_MASTER_KEY 환경 변수:
    # Rails 애플리케이션의 master.key 파일 접근 권한 문제를 해결하기 위해
    # master key 값을 환경 변수로 직접 전달합니다.
    restart: always

  redis:
    image: redis:7
    container_name: studyroom_redis
    restart: always
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: studyroom_zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: studyroom_kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  mysql_data:
  # tmp-data 명명된 볼륨 정의:
  # tmp 디렉토리에 익명 볼륨을 사용하도록 변경했으므로, 더 이상 필요하지 않습니다.